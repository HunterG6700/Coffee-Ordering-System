
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import static java.lang.Math.abs;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;

public class CustomerGUI extends javax.swing.JFrame {

    //Creates new form coffeeGUI
    public CustomerGUI() {
        String[] hours = new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"};
        String[] minutes = {"00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14",
            "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29",
            "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44",
            "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59"
        };
        String[] amOrPM = new String[]{"am", "pm"};
        initComponents();
        this.setTitle("Feline Fighters Coffee");
        for (int i = 0; i < hours.length; i++) {
            hour.addItem(hours[i]);
        }
        for (int i = 0; i < minutes.length; i++) {
            minute.addItem(minutes[i]);
        }
        for (int i = 0; i < amOrPM.length; i++) {
            amPm.addItem(amOrPM[i]);
        }
        //this.setIconImage();
    }

    File data = new File("D:\\footb\\Documents\\Classes\\Software Engineering\\coffee\\coffee\\src\\data.txt");
    Order order = new Order();
    Drink ca = new CafeAmericano();
    Drink cal = new CafeAuLait();
    Drink cm = new CafeMiel();
    Drink c = new Cappuccino();
    Drink ch = new Chai();
    Drink cc = new ClassicCappuccino();
    Drink cf = new Coffee();
    Drink cp = new ConPanna();
    Drink e = new Espresso();
    Drink fp = new FrenchPress();
    Drink m = new Macchiato();
    Drink ml = new MonchaLatte();
    Drink vl = new VanillaLatte();
    Drink fs = new FruitSmoothie();
    Drink hc = new HotChocolate();
    Drink ht = new HotTea();
    Drink it = new IcedTea();
    Drink oj = new OrangeJuice();
    Drink s = new Steamer();
    Drink l = new Lemonade();
    Drink dm = new Muffins();
    Drink dft = new FruitTart();
    Drink dcr = new CinnamonRoll();
    Drink db = new Bagel();
    boolean sizeChoose = false;
    double cost = 0;
    double tax = 0;
    String[] list = new String[100];
    double[] costList = new double[100];
    double[] taxList = new double[100];
    int x = 0;
    int location = 0;
    int index = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpCoffee = new javax.swing.ButtonGroup();
        grpOtherDrinks = new javax.swing.ButtonGroup();
        grpSize = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstOrder = new javax.swing.JList<>();
        lblOrder = new javax.swing.JLabel();
        lblStore = new javax.swing.JLabel();
        lblCost = new javax.swing.JLabel();
        txtCost = new javax.swing.JTextField();
        lblTax = new javax.swing.JLabel();
        txtTax = new javax.swing.JTextField();
        lblTip = new javax.swing.JLabel();
        txtTip = new javax.swing.JTextField();
        lblTotal = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        lblCoffee = new javax.swing.JLabel();
        lblOtherDrinks = new javax.swing.JLabel();
        lblAddon = new javax.swing.JLabel();
        lblExtras = new javax.swing.JLabel();
        pnlCoffee = new javax.swing.JPanel();
        radCafeAmericano = new javax.swing.JRadioButton();
        radCafeAuLait = new javax.swing.JRadioButton();
        radCafeMiel = new javax.swing.JRadioButton();
        radCappuccino = new javax.swing.JRadioButton();
        radChai = new javax.swing.JRadioButton();
        radClassicCappuccino = new javax.swing.JRadioButton();
        radCoffee = new javax.swing.JRadioButton();
        radConPanna = new javax.swing.JRadioButton();
        radEspresso = new javax.swing.JRadioButton();
        radFrenchPress = new javax.swing.JRadioButton();
        radMacchiato = new javax.swing.JRadioButton();
        radMonchaLatte = new javax.swing.JRadioButton();
        radVanillaLatte = new javax.swing.JRadioButton();
        pnlOtherDrinks = new javax.swing.JPanel();
        radFruitSmoothie = new javax.swing.JRadioButton();
        radHotChocolate = new javax.swing.JRadioButton();
        radHotTea = new javax.swing.JRadioButton();
        radIcedTea = new javax.swing.JRadioButton();
        radOrangeJuice = new javax.swing.JRadioButton();
        radSteamer = new javax.swing.JRadioButton();
        radLemonade = new javax.swing.JRadioButton();
        pnlAddon = new javax.swing.JPanel();
        ckbAddMilk = new javax.swing.JCheckBox();
        ckbAddSugar = new javax.swing.JCheckBox();
        ckbAddMoncha = new javax.swing.JCheckBox();
        ckbAddVanilla = new javax.swing.JCheckBox();
        ckbAddEspresso = new javax.swing.JCheckBox();
        ckbAddDessertDrizzle = new javax.swing.JCheckBox();
        ckbAddSkimMilk = new javax.swing.JCheckBox();
        ckbAddAlmondMilk = new javax.swing.JCheckBox();
        ckbAddSoyMilk = new javax.swing.JCheckBox();
        ckbAddFlavor = new javax.swing.JCheckBox();
        ckbAddDessertJam = new javax.swing.JCheckBox();
        pnlExtras = new javax.swing.JPanel();
        ckbAddCroissant = new javax.swing.JCheckBox();
        ckbAddBagel = new javax.swing.JCheckBox();
        ckbAddCinnamonRoll = new javax.swing.JCheckBox();
        ckbAddFruitTart = new javax.swing.JCheckBox();
        lblPicture = new javax.swing.JLabel();
        lblSize = new javax.swing.JLabel();
        radSmall = new javax.swing.JRadioButton();
        radMedium = new javax.swing.JRadioButton();
        radLarge = new javax.swing.JRadioButton();
        lblDescription = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        addToCartButton = new javax.swing.JButton();
        RemovoeButton = new javax.swing.JButton();
        SubmitOrderButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        hour = new javax.swing.JComboBox<>();
        minute = new javax.swing.JComboBox<>();
        amPm = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lstOrder.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        lstOrder.setName("lstCart"); // NOI18N
        lstOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstOrderMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lstOrder);

        lblOrder.setBackground(new java.awt.Color(153, 102, 0));
        lblOrder.setFont(new java.awt.Font("French Script MT", 1, 24)); // NOI18N
        lblOrder.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOrder.setText("Your Order");
        lblOrder.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        lblOrder.setName("lblCart"); // NOI18N
        lblOrder.setOpaque(true);

        lblStore.setBackground(new java.awt.Color(153, 102, 0));
        lblStore.setFont(new java.awt.Font("French Script MT", 1, 24)); // NOI18N
        lblStore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStore.setText("Feline Fighters Coffee");
        lblStore.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        lblStore.setOpaque(true);

        lblCost.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblCost.setText("Cost:");

        txtCost.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCost.setText("$0.00");
        txtCost.setEnabled(false);

        lblTax.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblTax.setText("Tax:");

        txtTax.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTax.setText("$0.00");
        txtTax.setEnabled(false);

        lblTip.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblTip.setText("Tip:");

        txtTip.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTip.setText("$0.00");
        txtTip.setEnabled(false);

        lblTotal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblTotal.setText("Total:");

        txtTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotal.setText("$0.00");
        txtTotal.setEnabled(false);

        lblCoffee.setBackground(new java.awt.Color(153, 102, 0));
        lblCoffee.setFont(new java.awt.Font("French Script MT", 1, 24)); // NOI18N
        lblCoffee.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCoffee.setText("Coffee");
        lblCoffee.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        lblCoffee.setOpaque(true);

        lblOtherDrinks.setBackground(new java.awt.Color(153, 102, 0));
        lblOtherDrinks.setFont(new java.awt.Font("French Script MT", 1, 24)); // NOI18N
        lblOtherDrinks.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOtherDrinks.setText("Other Drinks");
        lblOtherDrinks.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        lblOtherDrinks.setOpaque(true);

        lblAddon.setBackground(new java.awt.Color(153, 102, 0));
        lblAddon.setFont(new java.awt.Font("French Script MT", 1, 24)); // NOI18N
        lblAddon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddon.setText("Add-Ons");
        lblAddon.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        lblAddon.setOpaque(true);

        lblExtras.setBackground(new java.awt.Color(153, 102, 0));
        lblExtras.setFont(new java.awt.Font("French Script MT", 1, 24)); // NOI18N
        lblExtras.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExtras.setText("Extras");
        lblExtras.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        lblExtras.setOpaque(true);

        pnlCoffee.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        grpCoffee.add(radCafeAmericano);
        radCafeAmericano.setText("Cafe Americano");
        radCafeAmericano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radCafeAmericanoActionPerformed(evt);
            }
        });

        grpCoffee.add(radCafeAuLait);
        radCafeAuLait.setText("Cafe Au Lait");
        radCafeAuLait.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radCafeAuLaitActionPerformed(evt);
            }
        });

        grpCoffee.add(radCafeMiel);
        radCafeMiel.setText("Cafe Miel");
        radCafeMiel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radCafeMielActionPerformed(evt);
            }
        });

        grpCoffee.add(radCappuccino);
        radCappuccino.setText("Cappuccino");
        radCappuccino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radCappuccinoActionPerformed(evt);
            }
        });

        grpCoffee.add(radChai);
        radChai.setText("Chai");
        radChai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radChaiActionPerformed(evt);
            }
        });

        grpCoffee.add(radClassicCappuccino);
        radClassicCappuccino.setText("Classic Cappuccino");
        radClassicCappuccino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radClassicCappuccinoActionPerformed(evt);
            }
        });

        grpCoffee.add(radCoffee);
        radCoffee.setText("Coffee");
        radCoffee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radCoffeeActionPerformed(evt);
            }
        });

        grpCoffee.add(radConPanna);
        radConPanna.setText("Con Panna");
        radConPanna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radConPannaActionPerformed(evt);
            }
        });

        grpCoffee.add(radEspresso);
        radEspresso.setText("Espresso");
        radEspresso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radEspressoActionPerformed(evt);
            }
        });

        grpCoffee.add(radFrenchPress);
        radFrenchPress.setText("French Press");
        radFrenchPress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radFrenchPressActionPerformed(evt);
            }
        });

        grpCoffee.add(radMacchiato);
        radMacchiato.setText("Macchiato");
        radMacchiato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radMacchiatoActionPerformed(evt);
            }
        });

        grpCoffee.add(radMonchaLatte);
        radMonchaLatte.setText("Moncha Latte");
        radMonchaLatte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radMonchaLatteActionPerformed(evt);
            }
        });

        grpCoffee.add(radVanillaLatte);
        radVanillaLatte.setText("Vanillia Latte");
        radVanillaLatte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radVanillaLatteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCoffeeLayout = new javax.swing.GroupLayout(pnlCoffee);
        pnlCoffee.setLayout(pnlCoffeeLayout);
        pnlCoffeeLayout.setHorizontalGroup(
            pnlCoffeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCoffeeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCoffeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(radCafeAmericano, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(radCafeMiel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(radCafeAuLait, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(radCappuccino, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(radChai, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlCoffeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCoffeeLayout.createSequentialGroup()
                        .addGroup(pnlCoffeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(radClassicCappuccino, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(radCoffee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(radConPanna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(radEspresso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlCoffeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(radMonchaLatte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(radVanillaLatte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(radMacchiato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(radFrenchPress))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        pnlCoffeeLayout.setVerticalGroup(
            pnlCoffeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCoffeeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlCoffeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radCafeAmericano)
                    .addComponent(radClassicCappuccino)
                    .addComponent(radMacchiato))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCoffeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radCafeAuLait)
                    .addComponent(radCoffee)
                    .addComponent(radMonchaLatte))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCoffeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radCafeMiel)
                    .addComponent(radConPanna)
                    .addComponent(radVanillaLatte))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCoffeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radCappuccino)
                    .addComponent(radEspresso))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCoffeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radChai)
                    .addComponent(radFrenchPress)))
        );

        pnlOtherDrinks.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        grpCoffee.add(radFruitSmoothie);
        radFruitSmoothie.setText("Fruit Smoothie");
        radFruitSmoothie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radFruitSmoothieActionPerformed(evt);
            }
        });

        grpCoffee.add(radHotChocolate);
        radHotChocolate.setText("Hot Chocolate");
        radHotChocolate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radHotChocolateActionPerformed(evt);
            }
        });

        grpCoffee.add(radHotTea);
        radHotTea.setText("Hot Tea");
        radHotTea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radHotTeaActionPerformed(evt);
            }
        });

        grpCoffee.add(radIcedTea);
        radIcedTea.setText("Iced Tea");
        radIcedTea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radIcedTeaActionPerformed(evt);
            }
        });

        grpCoffee.add(radOrangeJuice);
        radOrangeJuice.setText("Orange Juice");
        radOrangeJuice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radOrangeJuiceActionPerformed(evt);
            }
        });

        grpCoffee.add(radSteamer);
        radSteamer.setText("Steamer");
        radSteamer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radSteamerActionPerformed(evt);
            }
        });

        grpCoffee.add(radLemonade);
        radLemonade.setText("Lemonade");
        radLemonade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radLemonadeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlOtherDrinksLayout = new javax.swing.GroupLayout(pnlOtherDrinks);
        pnlOtherDrinks.setLayout(pnlOtherDrinksLayout);
        pnlOtherDrinksLayout.setHorizontalGroup(
            pnlOtherDrinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOtherDrinksLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOtherDrinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(radHotChocolate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(radFruitSmoothie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(radHotTea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addGroup(pnlOtherDrinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(radOrangeJuice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                    .addComponent(radIcedTea, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(radSteamer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radLemonade)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlOtherDrinksLayout.setVerticalGroup(
            pnlOtherDrinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOtherDrinksLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlOtherDrinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radFruitSmoothie)
                    .addComponent(radIcedTea)
                    .addComponent(radLemonade))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlOtherDrinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radHotChocolate)
                    .addComponent(radOrangeJuice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlOtherDrinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radHotTea)
                    .addComponent(radSteamer)))
        );

        pnlAddon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        ckbAddMilk.setText("Milk");

        ckbAddSugar.setText("Sugar");

        ckbAddMoncha.setText("Moncha");

        ckbAddVanilla.setText("Vanilla");

        ckbAddEspresso.setText("Extra Espresso");

        ckbAddDessertDrizzle.setText("Dessert Drizzle");

        ckbAddSkimMilk.setText("Skim Milk");

        ckbAddAlmondMilk.setText("Almond Milk");

        ckbAddSoyMilk.setText("Soy Milk");

        ckbAddFlavor.setText("Extra Flavor");

        ckbAddDessertJam.setText("Dessert Jam");

        javax.swing.GroupLayout pnlAddonLayout = new javax.swing.GroupLayout(pnlAddon);
        pnlAddon.setLayout(pnlAddonLayout);
        pnlAddonLayout.setHorizontalGroup(
            pnlAddonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAddonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ckbAddMilk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlAddonLayout.createSequentialGroup()
                        .addGroup(pnlAddonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ckbAddSugar)
                            .addComponent(ckbAddMoncha)
                            .addComponent(ckbAddVanilla)
                            .addComponent(ckbAddEspresso)
                            .addComponent(ckbAddDessertDrizzle)
                            .addComponent(ckbAddSkimMilk)
                            .addComponent(ckbAddAlmondMilk)
                            .addComponent(ckbAddSoyMilk)
                            .addComponent(ckbAddFlavor)
                            .addComponent(ckbAddDessertJam))
                        .addGap(0, 19, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlAddonLayout.setVerticalGroup(
            pnlAddonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ckbAddFlavor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbAddSugar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbAddMoncha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbAddVanilla)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbAddEspresso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbAddDessertDrizzle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbAddSkimMilk)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbAddAlmondMilk)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbAddSoyMilk)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbAddMilk)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ckbAddDessertJam))
        );

        pnlExtras.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        ckbAddCroissant.setText("Croissant");

        ckbAddBagel.setText("Bagel");

        ckbAddCinnamonRoll.setText("Cinnamon Roll");

        ckbAddFruitTart.setText("Fruit Tart");

        javax.swing.GroupLayout pnlExtrasLayout = new javax.swing.GroupLayout(pnlExtras);
        pnlExtras.setLayout(pnlExtrasLayout);
        pnlExtrasLayout.setHorizontalGroup(
            pnlExtrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlExtrasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlExtrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ckbAddBagel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ckbAddCroissant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ckbAddCinnamonRoll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ckbAddFruitTart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        pnlExtrasLayout.setVerticalGroup(
            pnlExtrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlExtrasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ckbAddCroissant)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbAddBagel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbAddCinnamonRoll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbAddFruitTart)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblPicture.setBackground(new java.awt.Color(153, 102, 0));
        lblPicture.setFont(new java.awt.Font("French Script MT", 1, 24)); // NOI18N
        lblPicture.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPicture.setText("Picture");
        lblPicture.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        lblPicture.setOpaque(true);

        lblSize.setBackground(new java.awt.Color(153, 102, 0));
        lblSize.setFont(new java.awt.Font("French Script MT", 1, 24)); // NOI18N
        lblSize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSize.setText("Size");
        lblSize.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        lblSize.setOpaque(true);

        grpSize.add(radSmall);
        radSmall.setText("Small");

        grpSize.add(radMedium);
        radMedium.setText("Medium");

        grpSize.add(radLarge);
        radLarge.setText("Large");

        lblDescription.setBackground(new java.awt.Color(153, 102, 0));
        lblDescription.setFont(new java.awt.Font("French Script MT", 1, 24)); // NOI18N
        lblDescription.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDescription.setText("Description");
        lblDescription.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        lblDescription.setOpaque(true);

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        txtDescription.setEnabled(false);
        jScrollPane1.setViewportView(txtDescription);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FFClogo.png"))); // NOI18N

        addToCartButton.setText("Add To Cart");
        addToCartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCartButtonActionPerformed(evt);
            }
        });

        RemovoeButton.setText("Remove");
        RemovoeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemovoeButtonActionPerformed(evt);
            }
        });

        SubmitOrderButton.setText("Submit Order");
        SubmitOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitOrderButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("Pickup Time");

        minute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minuteActionPerformed(evt);
            }
        });

        jLabel3.setText(":");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblOtherDrinks, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pnlCoffee, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblCoffee, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pnlOtherDrinks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblAddon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pnlAddon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pnlExtras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblExtras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(lblStore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSize, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(radSmall)
                                .addGap(18, 18, 18)
                                .addComponent(radMedium)
                                .addGap(18, 18, 18)
                                .addComponent(radLarge)
                                .addGap(33, 33, 33)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(hour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jLabel3)
                                .addGap(4, 4, 4)
                                .addComponent(minute, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(amPm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblCost)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblTax)
                                                    .addComponent(lblTip)
                                                    .addComponent(lblTotal))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtTip, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtTax, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtTotal)
                                            .addComponent(txtCost, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(addToCartButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(RemovoeButton))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(SubmitOrderButton)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStore)
                    .addComponent(lblOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblExtras, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblCoffee)
                                .addComponent(lblAddon)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(pnlAddon, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(pnlCoffee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblOtherDrinks)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlOtherDrinks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pnlExtras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 12, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addToCartButton)
                            .addComponent(RemovoeButton))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCost))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTax)
                            .addComponent(txtTax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTip))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTotal)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SubmitOrderButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblSize)
                                .addComponent(radSmall)
                                .addComponent(radMedium)
                                .addComponent(radLarge)
                                .addComponent(minute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(amPm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(hour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPicture)
                            .addComponent(lblDescription))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void radCafeAmericanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radCafeAmericanoActionPerformed
        txtDescription.setText(ca.type());
    }//GEN-LAST:event_radCafeAmericanoActionPerformed

    private void radCafeAuLaitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radCafeAuLaitActionPerformed
        txtDescription.setText(cal.type());
    }//GEN-LAST:event_radCafeAuLaitActionPerformed

    private void radCafeMielActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radCafeMielActionPerformed
        txtDescription.setText(cm.type());
    }//GEN-LAST:event_radCafeMielActionPerformed

    private void radCappuccinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radCappuccinoActionPerformed
        txtDescription.setText(c.type());
    }//GEN-LAST:event_radCappuccinoActionPerformed

    private void radChaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radChaiActionPerformed
        txtDescription.setText(ch.type());
    }//GEN-LAST:event_radChaiActionPerformed

    private void radClassicCappuccinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radClassicCappuccinoActionPerformed
        txtDescription.setText(cc.type());
    }//GEN-LAST:event_radClassicCappuccinoActionPerformed

    private void radCoffeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radCoffeeActionPerformed
        txtDescription.setText(cf.type());
    }//GEN-LAST:event_radCoffeeActionPerformed

    private void radConPannaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radConPannaActionPerformed
        txtDescription.setText(cp.type());
    }//GEN-LAST:event_radConPannaActionPerformed

    private void radEspressoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radEspressoActionPerformed
        txtDescription.setText(e.type());
    }//GEN-LAST:event_radEspressoActionPerformed

    private void radFrenchPressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radFrenchPressActionPerformed
        txtDescription.setText(fp.type());
    }//GEN-LAST:event_radFrenchPressActionPerformed

    private void radMacchiatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radMacchiatoActionPerformed
        txtDescription.setText(m.type());
    }//GEN-LAST:event_radMacchiatoActionPerformed

    private void radMonchaLatteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radMonchaLatteActionPerformed
        txtDescription.setText(ml.type());
    }//GEN-LAST:event_radMonchaLatteActionPerformed

    private void radVanillaLatteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radVanillaLatteActionPerformed
        txtDescription.setText(vl.type());
    }//GEN-LAST:event_radVanillaLatteActionPerformed

    private void radFruitSmoothieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radFruitSmoothieActionPerformed
        txtDescription.setText(fs.type());
    }//GEN-LAST:event_radFruitSmoothieActionPerformed

    private void radHotChocolateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radHotChocolateActionPerformed
        txtDescription.setText(hc.type());
    }//GEN-LAST:event_radHotChocolateActionPerformed

    private void radHotTeaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radHotTeaActionPerformed
        txtDescription.setText(ht.type());
    }//GEN-LAST:event_radHotTeaActionPerformed

    private void radIcedTeaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radIcedTeaActionPerformed
        txtDescription.setText(it.type());
    }//GEN-LAST:event_radIcedTeaActionPerformed

    private void radOrangeJuiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radOrangeJuiceActionPerformed
        txtDescription.setText(oj.type());
    }//GEN-LAST:event_radOrangeJuiceActionPerformed

    private void radSteamerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radSteamerActionPerformed
        txtDescription.setText(s.type());
    }//GEN-LAST:event_radSteamerActionPerformed

    private void radLemonadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radLemonadeActionPerformed
        txtDescription.setText(l.type());
    }//GEN-LAST:event_radLemonadeActionPerformed

    private static DecimalFormat df = new DecimalFormat("$0.00");
    boolean dessertAdded = false;

    private void updateCost() {
        double dessertCost = 0;
        if (dessertAdded) {
            dessertCost = order.getDessertCost(index);
        }
        double tempCost = order.getBaseDrink().cost();
        tempCost = tempCost + dessertCost;
        costList[x] = tempCost;
        cost = tempCost + cost;
        String temp = String.valueOf(df.format(cost));
        txtCost.setText(temp);
    }

    private void updateTax() {
        double dessertTax = 0;
        if (dessertAdded) {
            dessertTax = order.getDessertTax(index);
        }
        double tempCost = order.getBaseDrink().cost();
        double tempTax = tempCost * 0.06;
        tempTax = tempTax + dessertTax;
        taxList[x] = tempTax;
        tax = tax + tempTax;
        String temp = String.valueOf(df.format(tax));
        txtTax.setText(temp);
    }

    private void updateTotal() {
        double tempCost = cost + tax;
        String temp = String.valueOf(df.format(tempCost));
        txtTotal.setText(temp);
    }

    private void subtractCost() {
        double tempCost = costList[location];
        cost = abs(tempCost - cost);
        String temp = String.valueOf(df.format(cost));
        txtCost.setText(temp);
        costList[location] = 0;
    }

    private void subtractTax() {
        double tempTax = taxList[location];
        tax = abs(tax - tempTax);
        String temp = String.valueOf(df.format(tax));
        txtTax.setText(temp);
        taxList[location] = 0;
    }

    private void updateList() {
        lstOrder.setListData(list);
    }

    private void checkDrink() {
        if (radCafeAmericano.isSelected()) {
            order.setBaseDrink(ca);
        }
        if (radCafeAuLait.isSelected()) {
            order.setBaseDrink(cal);
        }
        if (radCafeMiel.isSelected()) {
            order.setBaseDrink(cm);
        }
        if (radCappuccino.isSelected()) {
            order.setBaseDrink(c);
        }
        if (radClassicCappuccino.isSelected()) {
            order.setBaseDrink(cc);
        }
        if (radCoffee.isSelected()) {
            order.setBaseDrink(cf);
        }
        if (radConPanna.isSelected()) {
            order.setBaseDrink(cp);
        }
        if (radEspresso.isSelected()) {
            order.setBaseDrink(e);
        }
        if (radFrenchPress.isSelected()) {
            order.setBaseDrink(fp);
        }
        if (radMacchiato.isSelected()) {
            order.setBaseDrink(m);
        }
        if (radMonchaLatte.isSelected()) {
            order.setBaseDrink(ml);
        }
        if (radVanillaLatte.isSelected()) {
            order.setBaseDrink(vl);
        }
        if (radFruitSmoothie.isSelected()) {
            order.setBaseDrink(fs);
        }
        if (radHotChocolate.isSelected()) {
            order.setBaseDrink(hc);
        }
        if (radHotTea.isSelected()) {
            order.setBaseDrink(ht);
        }
        if (radIcedTea.isSelected()) {
            order.setBaseDrink(it);
        }
        if (radOrangeJuice.isSelected()) {
            order.setBaseDrink(oj);
        }
        if (radSteamer.isSelected()) {
            order.setBaseDrink(s);
        }
        if (radLemonade.isSelected()) {
            order.setBaseDrink(l);
        }
    }
    private void addToCartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCartButtonActionPerformed
        checkDrink();
        Drink temp = order.getBaseDrink();
        if (ckbAddAlmondMilk.isSelected()) {
            temp = new AlmondMilkDecorator(temp);
            order.setBaseDrink(temp);
        }
        if (ckbAddDessertDrizzle.isSelected()) {
            temp = new DessertDrizzleDecorator(temp);
            order.setBaseDrink(temp);
        }
        if (ckbAddDessertJam.isSelected()) {
            order.setBaseDrink(temp);
        }
        if (ckbAddEspresso.isSelected()) {
            temp = new ExtraEsspressoDecorator(temp);
            order.setBaseDrink(temp);
        }
        if (ckbAddFlavor.isSelected()) {
            temp = new FlavorDecorator(temp);
            order.setBaseDrink(temp);
        }
        if (ckbAddFruitTart.isSelected()) {
            order.setBaseDrink(temp);
        }
        if (ckbAddMilk.isSelected()) {
            temp = new MilkDecorator(temp);
            order.setBaseDrink(temp);
        }
        if (ckbAddMoncha.isSelected()) {
            temp = new MonchaDecorator(temp);
            order.setBaseDrink(temp);
        }
        if (ckbAddSkimMilk.isSelected()) {
            temp = new SkimMilkDecorator(temp);
            order.setBaseDrink(temp);
        }
        if (ckbAddSoyMilk.isSelected()) {
            temp = new SoyMilkDecorator(temp);
            order.setBaseDrink(temp);
        }
        if (ckbAddSugar.isSelected()) {
            temp = new SugarDecorator(temp);
            order.setBaseDrink(temp);
        }
        if (ckbAddVanilla.isSelected()) {
            temp = new VanillaDecorator(temp);
            order.setBaseDrink(temp);
        }
        if (radMedium.isSelected()) {
            temp = new MediumSizeDecorator(temp);
            order.setBaseDrink(temp);
        }
        if (radLarge.isSelected()) {
            temp = new LargeSizeDecorator(temp);
            order.setBaseDrink(temp);
        }
        if (ckbAddCroissant.isSelected()) {
            order.setDessert(index, dm);
            dessertAdded = true;
            index++;
        }
        if (ckbAddBagel.isSelected()) {
            order.setDessert(index, db);
            dessertAdded = true;
            index++;
        }
        if (ckbAddCinnamonRoll.isSelected()) {
            order.setDessert(index, dcr);
            dessertAdded = true;
            index++;
        }
        if (ckbAddFruitTart.isSelected()) {
            order.setDessert(index, dft);
            dessertAdded = true;
            index++;
              
        }
         String time = hour.getSelectedItem().toString() + ":" + minute.getSelectedItem().toString() + " " + amPm.getSelectedItem().toString();

        if (dessertAdded) {
            list[x] = order.getBaseDrink().type() + " " + order.getDescription(index)+ "Pickup Time: " + time;
        }
        if (dessertAdded == false) {
            list[x] = order.getBaseDrink().type() + "Pickup Time: " + time;
        }
      
         
       
        ckbAddCroissant.setSelected(false);
        ckbAddBagel.setSelected(false);
        ckbAddCinnamonRoll.setSelected(false);
        ckbAddFruitTart.setSelected(false);
        ckbAddAlmondMilk.setSelected(false);
        ckbAddDessertDrizzle.setSelected(false);
        ckbAddDessertJam.setSelected(false);
        ckbAddEspresso.setSelected(false);
        ckbAddFlavor.setSelected(false);
        ckbAddMilk.setSelected(false);
        ckbAddMoncha.setSelected(false);
        ckbAddSkimMilk.setSelected(false);
        ckbAddSoyMilk.setSelected(false);
        ckbAddSugar.setSelected(false);
        ckbAddVanilla.setSelected(false);
        radMedium.setSelected(false);
        radLarge.setSelected(false);
        updateCost();
        updateTax();
        updateTotal();
        updateList();
        order.setBaseDrink(null);
        x++;
        dessertAdded = false;
        index = 0;
    }//GEN-LAST:event_addToCartButtonActionPerformed

    private void RemovoeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemovoeButtonActionPerformed
        list[location] = "";
        updateList();
        subtractCost();
        subtractTax();
        updateTotal();
    }//GEN-LAST:event_RemovoeButtonActionPerformed

    private void SubmitOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitOrderButtonActionPerformed

   
        try {
            if (!data.exists()) {
                data.createNewFile();
            }
            FileWriter fw;
            fw = new FileWriter(data, true);
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pw = new PrintWriter(bw);
            for (int i = 0; i < x; i++) {
                if (taxList[i] + costList[i] != 0.0) {
                    //Hunter just save your time in line 1114 righter after the space at the end. You will need to use +;
                    pw.print(list[i] + " Total: $" + Double.toString(taxList[i] + costList[i]) + " ");
                    pw.println();
                    pw.println();
                }
            }
            pw.println("Order Finished");
            //Closing the connections to the file.
            pw.close();
            bw.close();
            fw.close();

        } catch (IOException ex) {
            Logger.getLogger(CustomerGUI.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

        //Printing input string to file. (This appends to the file, not rewriting)
        for (int y = 0; y < x; y++) {
            list[y] = " ";
        }
        updateList();
        txtCost.setText("$0.00");
        txtTax.setText("$0.00");
        txtTotal.setText("$0.00");
        cost = 0;
        tax = 0;
        x = 0;
    }//GEN-LAST:event_SubmitOrderButtonActionPerformed

    private void lstOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstOrderMouseClicked
        location = lstOrder.getSelectedIndex();
    }//GEN-LAST:event_lstOrderMouseClicked

    private void minuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minuteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minuteActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new CustomerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton RemovoeButton;
    private javax.swing.JButton SubmitOrderButton;
    private javax.swing.JButton addToCartButton;
    private javax.swing.JComboBox<String> amPm;
    private javax.swing.JCheckBox ckbAddAlmondMilk;
    private javax.swing.JCheckBox ckbAddBagel;
    private javax.swing.JCheckBox ckbAddCinnamonRoll;
    private javax.swing.JCheckBox ckbAddCroissant;
    private javax.swing.JCheckBox ckbAddDessertDrizzle;
    private javax.swing.JCheckBox ckbAddDessertJam;
    private javax.swing.JCheckBox ckbAddEspresso;
    private javax.swing.JCheckBox ckbAddFlavor;
    private javax.swing.JCheckBox ckbAddFruitTart;
    private javax.swing.JCheckBox ckbAddMilk;
    private javax.swing.JCheckBox ckbAddMoncha;
    private javax.swing.JCheckBox ckbAddSkimMilk;
    private javax.swing.JCheckBox ckbAddSoyMilk;
    private javax.swing.JCheckBox ckbAddSugar;
    private javax.swing.JCheckBox ckbAddVanilla;
    private javax.swing.ButtonGroup grpCoffee;
    private javax.swing.ButtonGroup grpOtherDrinks;
    private javax.swing.ButtonGroup grpSize;
    private javax.swing.JComboBox<String> hour;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAddon;
    private javax.swing.JLabel lblCoffee;
    private javax.swing.JLabel lblCost;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblExtras;
    private javax.swing.JLabel lblOrder;
    private javax.swing.JLabel lblOtherDrinks;
    private javax.swing.JLabel lblPicture;
    private javax.swing.JLabel lblSize;
    private javax.swing.JLabel lblStore;
    private javax.swing.JLabel lblTax;
    private javax.swing.JLabel lblTip;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JList<String> lstOrder;
    private javax.swing.JComboBox<String> minute;
    private javax.swing.JPanel pnlAddon;
    private javax.swing.JPanel pnlCoffee;
    private javax.swing.JPanel pnlExtras;
    private javax.swing.JPanel pnlOtherDrinks;
    private javax.swing.JRadioButton radCafeAmericano;
    private javax.swing.JRadioButton radCafeAuLait;
    private javax.swing.JRadioButton radCafeMiel;
    private javax.swing.JRadioButton radCappuccino;
    private javax.swing.JRadioButton radChai;
    private javax.swing.JRadioButton radClassicCappuccino;
    private javax.swing.JRadioButton radCoffee;
    private javax.swing.JRadioButton radConPanna;
    private javax.swing.JRadioButton radEspresso;
    private javax.swing.JRadioButton radFrenchPress;
    private javax.swing.JRadioButton radFruitSmoothie;
    private javax.swing.JRadioButton radHotChocolate;
    private javax.swing.JRadioButton radHotTea;
    private javax.swing.JRadioButton radIcedTea;
    private javax.swing.JRadioButton radLarge;
    private javax.swing.JRadioButton radLemonade;
    private javax.swing.JRadioButton radMacchiato;
    private javax.swing.JRadioButton radMedium;
    private javax.swing.JRadioButton radMonchaLatte;
    private javax.swing.JRadioButton radOrangeJuice;
    private javax.swing.JRadioButton radSmall;
    private javax.swing.JRadioButton radSteamer;
    private javax.swing.JRadioButton radVanillaLatte;
    private javax.swing.JTextField txtCost;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtTax;
    private javax.swing.JTextField txtTip;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
